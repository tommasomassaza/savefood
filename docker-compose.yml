---
version: '3.8'
services:

  # Eureka Discovery Server
  discovery-server:
    container_name: discovery-server
    build: ./discovery-server/
    ports:
      - "8761:8761"
    environment:
      eureka.instance.hostname: discovery-server
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/


  # Api Gateway
  api-gateway:
    container_name: api-gateway
    build: ./api-gateway/
    ports:
      - "8080:8080"
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
    depends_on:
      - discovery-server


  # User service
  user-service:
    container_name: user-service
    build: ./user-service/
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
    depends_on:
      - discovery-server
      - axon-server
      - postgres-user
      
      
  # Postgres for user
  postgres-user:
    container_name: postgres-user
    image: postgres
    environment:
      POSTGRES_DB: user-db
      POSTGRES_USER: ted
      POSTGRES_PASSWORD: qazmlpD
    volumes:
      - user-db-data:/data/postgres
    restart: unless-stopped


  # Payment service
  payment-service:
    container_name: payment-service
    build: ./payment-service/
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
    depends_on:
      - discovery-server
      - axon-server
      - postgres-payment

  # Postgres for payment
  postgres-payment:
    container_name: postgres-payment
    image: postgres
    environment:
      POSTGRES_DB: payment-db
      POSTGRES_USER: ted
      POSTGRES_PASSWORD: qazmlpD
    volumes:
      - payment-db-data:/data/postgres
    restart: unless-stopped


  # Order service
  order-service:
    container_name: order-service
    build: ./order-service/
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
    depends_on:
      - discovery-server
      - axon-server
      - postgres-order

  # Postgres for order
  postgres-order:
    container_name: postgres-order
    image: postgres
    environment:
      POSTGRES_DB: order-db
      POSTGRES_USER: ted
      POSTGRES_PASSWORD: qazmlpD
    volumes:
      - order-db-data:/data/postgres
    restart: unless-stopped

  # Shop service
  shop-service:
    container_name: shop-service
    build: ./shop-service/
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
    depends_on:
      - discovery-server
      - axon-server
      - postgres-shop

  # Postgres for shop
  postgres-shop:
    container_name: postgres-shop
    image: postgres
    environment:
      POSTGRES_DB: shop-db
      POSTGRES_USER: ted
      POSTGRES_PASSWORD: qazmlpD
    volumes:
      - shop-db-data:/data/postgres
    restart: unless-stopped


  # Reservation service
  reservation-service:
    container_name: reservation-service
    build: ./reservation-service/
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
    depends_on:
      - discovery-server
      - axon-server
      - postgres-reservation

  # Postgres for reservation
  postgres-reservation:
    container_name: postgres-reservation
    image: postgres
    environment:
      POSTGRES_DB: reservation-db
      POSTGRES_USER: ted
      POSTGRES_PASSWORD: qazmlpD
    volumes:
      - reservation-db-data:/data/postgres
    restart: unless-stopped


  # Box service
  box-service:
    container_name: box-service
    build: ./box-service/
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
    depends_on:
      - discovery-server
      - axon-server
      - postgres-box

  # Postgres for box
  postgres-box:
    container_name: postgres-box
    image: postgres
    environment:
      POSTGRES_DB: box-db
      POSTGRES_USER: ted
      POSTGRES_PASSWORD: qazmlpD
    volumes:
      - box-db-data:/data/postgres
    restart: unless-stopped


  # Axon Server for event store
  axon-server:
    image: axoniq/axonserver:latest-dev
    hostname: axon-server
    volumes:
      - axonserver-data:/axonserver/data
      - axonserver-events:/axonserver/eventdata
      - axonserver-config:/axonserver/config:ro
    ports:
      - '8024:8024'
      - '8124:8124'


  #Frontend with react
  #frontend:
  #  container_name: frontend
  #  build:
  #    context: ./frontend/
  #    target: production
  #  volumes:
  #    - ./frontend:/app/src
  #  ports:
  #    - "3000:3000"
  #  restart: unless-stopped


# Volumes for Axon and Postgres
volumes:
    axonserver-data:
    axonserver-events:
    axonserver-config:
    reservation-db-data:
    user-db-data:
    payment-db-data:
    order-db-data:
    shop-db-data:
    box-db-data:
    frontend:

