apiVersion: apps/v1
kind: Deployment
metadata:
  name: discovery-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: discovery-server
  template:
    metadata:
      labels:
        app: discovery-server
    spec:
      containers:
        - name: discovery-server
          image: ./discovery-server/
          ports:
            - containerPort: 8761
          env:
            - name: eureka.instance.hostname
              value: discovery-server
            - name: eureka.client.serviceUrl.defaultZone
              value: http://discovery-server:8761/eureka/

apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: ./api-gateway/
          ports:
            - containerPort: 8080
          env:
            - name: eureka.client.serviceUrl.defaultZone
              value: http://discovery-server:8761/eureka/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment-service
  template:
    metadata:
      labels:
        app: payment-service
    spec:
      containers:
        - name: payment-service
          image: your-registry/payment-service:latest
          env:
            - name: eureka.client.serviceUrl.defaultZone
              value: http://discovery-server:8761/eureka/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
        - name: order-service
          image: ./order-service
          env:
            - name: eureka.client.serviceUrl.defaultZone
              value: http://discovery-server:8761/eureka/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shop-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shop-service
  template:
    metadata:
      labels:
        app: shop-service
    spec:
      containers:
        - name: shop-service
          image: ./shop-service
          env:
            - name: eureka.client.serviceUrl.defaultZone
              value: http://discovery-server:8761/eureka/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reservation-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reservation-service
  template:
    metadata:
      labels:
        app: reservation-service
    spec:
      containers:
        - name: reservation-service
          image: ./reservation-service
          env:
            - name: eureka.client.serviceUrl.defaultZone
              value: http://discovery-server:8761/eureka/
---
# Axon Server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: axon-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: axon-server
  template:
    metadata:
      labels:
        app: axon-server
    spec:
      containers:
        - name: axon-server
          image: axoniq/axonserver:latest-dev
          ports:
            - containerPort: 8024
              name: grpc
            - containerPort: 8124
              name: http
          volumeMounts:
            - name: axonserver-data
              mountPath: /axonserver/data
            - name: axonserver-events
              mountPath: /axonserver/eventdata
            - name: axonserver-config
              mountPath: /axonserver/config
      volumes:
        - name: axonserver-data
          emptyDir: {}
        - name: axonserver-events
          emptyDir: {}
        - name: axonserver-config
          configMap:
            name: axonserver-config

# Database
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-box
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-box
  template:
    metadata:
      labels:
        app: postgres-box
    spec:
      containers:
        - name: postgres-box
          image: postgres
          env:
            - name: POSTGRES_DB
              value: box-db
            - name: POSTGRES_USER
              value: ted
            - name: POSTGRES_PASSWORD
              value: qazmlpD
          volumeMounts:
            - name: box-db-data
              mountPath: /data/postgres
            restartPolicy: Always
      volumes:
        - name: box-db-data
          emptyDir: { }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-reservation
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-reservation
  template:
    metadata:
      labels:
        app: postgres-reservation
    spec:
      containers:
        - name: postgres-reservation
          image: postgres
          env:
            - name: POSTGRES_DB
              value: reservation-db
            - name: POSTGRES_USER
              value: ted
            - name: POSTGRES_PASSWORD
              value: qazmlpD
          volumeMounts:
            - name: reservation-db-data
              mountPath: /data/postgres
            restartPolicy: Always
      volumes:
        - name: reservation-db-data
          emptyDir: { }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-payment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-payment
  template:
    metadata:
      labels:
        app: postgres-payment
    spec:
      containers:
        - name: postgres-payment
          image: postgres
          env:
            - name: POSTGRES_DB
              value: payment-db
            - name: POSTGRES_USER
              value: ted
            - name: POSTGRES_PASSWORD
              value: qazmlpD
          volumeMounts:
            - name: payment-db-data
              mountPath: /data/postgres
            restartPolicy: Always
      volumes:
        - name: payment-db-data
          emptyDir: { }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-order
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-order
  template:
    metadata:
      labels:
        app: postgres-order
    spec:
      containers:
        - name: postgres-order
          image: postgres
          env:
            - name: POSTGRES_DB
              value: order-db
            - name: POSTGRES_USER
              value: ted
            - name: POSTGRES_PASSWORD
              value: qazmlpD
          volumeMounts:
            - name: order-db-data
              mountPath: /data/postgres
            restartPolicy: Always
      volumes:
        - name: order-db-data
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-shop
  template:
    metadata:
      labels:
        app: postgres-shop
    spec:
      containers:
        - name: postgres-shop
          image: postgres
          env:
            - name: POSTGRES_DB
              value: shop-db
            - name: POSTGRES_USER
              value: ted
            - name: POSTGRES_PASSWORD
              value: qazmlpD
          volumeMounts:
            - name: shop-db-data
              mountPath: /data/postgres
            restartPolicy: Always
      volumes:
        - name: shop-db-data
          emptyDir: {}
---




---
apiVersion: v1
kind: Service
metadata:
  name: axon-server
spec:
  selector:
    app: axon-server
  ports:
    - protocol: TCP
      port: 8024
      targetPort: 8024
    - protocol: TCP
      port: 8124
      targetPort: 8124
---
apiVersion: v1
kind: Service
metadata:
  name: discovery-server
spec:
  selector:
    app: discovery-server
  ports:
    - protocol: TCP
      port: 8761
      targetPort: 8761
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
spec:
  selector:
    app: api-gateway
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
